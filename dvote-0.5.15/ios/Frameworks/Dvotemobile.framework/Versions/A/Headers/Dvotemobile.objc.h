// Objective-C API for talking to gitlab.com/vocdoni/go-dvote-mobile Go package.
//   gobind -lang=objc gitlab.com/vocdoni/go-dvote-mobile
//
// File is generated by gobind. Do not edit.

#ifndef __Dvotemobile_H__
#define __Dvotemobile_H__

@import Foundation;
#include "ref.h"
#include "Universe.objc.h"


/**
 * DecryptString decrypts a base64 encoded string that contains nonce|cipherText|tag
using 256-bit AES-GCM
 */
FOUNDATION_EXPORT NSString* _Nonnull DvotemobileDecryptString(NSString* _Nullable cipherText, NSString* _Nullable passphrase, NSError* _Nullable* _Nullable error);

/**
 * EncryptString encrypts text using 256-bit AES-GCM into a base64 encoded string
that contains nonce|ciphertext|tag
 */
FOUNDATION_EXPORT NSString* _Nonnull DvotemobileEncryptString(NSString* _Nullable text, NSString* _Nullable passphrase, NSError* _Nullable* _Nullable error);

/**
 * GenerateMnemonic generates a random BIP39 mnemonic of the given size (128-256)
 */
FOUNDATION_EXPORT NSString* _Nonnull DvotemobileGenerateMnemonic(long size, NSError* _Nullable* _Nullable error);

/**
 * MnemonicToAddress computes the address for the given mnemonic and HD path
 */
FOUNDATION_EXPORT NSString* _Nonnull DvotemobileMnemonicToAddress(NSString* _Nullable mnemonic, NSString* _Nullable hdPath, NSError* _Nullable* _Nullable error);

/**
 * MnemonicToPrivateKey computes the private key for the given mnemonic and HD path
 */
FOUNDATION_EXPORT NSString* _Nonnull DvotemobileMnemonicToPrivateKey(NSString* _Nullable mnemonic, NSString* _Nullable hdPath, NSError* _Nullable* _Nullable error);

/**
 * MnemonicToPublicKey computes the public key for the given mnemonic and HD path
 */
FOUNDATION_EXPORT NSString* _Nonnull DvotemobileMnemonicToPublicKey(NSString* _Nullable mnemonic, NSString* _Nullable hdPath, NSError* _Nullable* _Nullable error);

/**
 * SignString signs the given string using the given ECDSA private key.
From: https://goethereumbook.org/signature-generate/
 */
FOUNDATION_EXPORT NSString* _Nonnull DvotemobileSignString(NSString* _Nullable message, NSString* _Nullable privKey, NSError* _Nullable* _Nullable error);

/**
 * VerifySignature checks whether the given signature is valid and
corresponds to the given ECDSA public key.
From: https://goethereumbook.org/signature-verify/
 */
FOUNDATION_EXPORT BOOL DvotemobileVerifySignature(NSString* _Nullable hexSignature, NSString* _Nullable payload, NSString* _Nullable publicKey, BOOL* _Nullable ret0_, NSError* _Nullable* _Nullable error);

#endif
